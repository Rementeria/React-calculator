{"version":3,"sources":["components/Calculator.js","App.js","serviceWorker.js","index.js"],"names":["Calculator","initialValue","useState","panel","setPanel","subPanel","setSubPanel","arithRegex","parenthRegex","useEffect","createFunction","name","value","style","functions","arithmeticCheck","e","test","length","slice","parenthesis","buttonNumber","className","map","data","key","onClick","target","math","err","buttonResult","href","rel","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.86fc2b2b.chunk.js","sourcesContent":["//This is the base of everything\nimport React, { useState, useEffect } from \"react\";\nimport * as math from \"mathjs\";\nimport \"./Calculator.css\";\n\nfunction Calculator({ initialValue }) {\n  const [panel, setPanel] = useState(initialValue);\n  const [subPanel, setSubPanel] = useState(\"Ans\");\n  //https://stackoverflow.com/questions/32311081/check-for-special-characters-in-string\n  //regex taken from this site\n  let arithRegex = /[*+-/()]+/;\n  let parenthRegex = /[()]+/;\n\n  useEffect(() => {\n    if (initialValue === \"\") {\n      setPanel(\"0\");\n    }\n  }, [initialValue]);\n\n  const createFunction = (name, value, style) => {\n    return { name, value, style };\n  };\n\n  const functions = [\n    createFunction(\"AC\", \"AC\", \"nes-btn is-error col-3\"),\n    createFunction(\"<<\", \"Delete\", \"nes-btn is-warning col-3\"),\n    createFunction(\"Ans\", \"Edit\", \"nes-btn is-warning col-3\"),\n\n    createFunction(\"+\", \"+\", \"nes-btn is-primary col-3\"),\n    createFunction(\"-\", \"-\", \"nes-btn is-primary col-3\"),\n    createFunction(\"*\", \"*\", \"nes-btn is-primary col-3\"),\n\n    createFunction(\"/\", \"/\", \"nes-btn is-primary col-3\"),\n    createFunction(\"(\", \"(\", \"nes-btn is-primary col-3\"),\n    createFunction(\")\", \")\", \"nes-btn  is-primary col-3\"),\n\n    createFunction(\"7\", \"7\", \"nes-btn col-3\"),\n    createFunction(\"8\", \"8\", \"nes-btn col-3\"),\n    createFunction(\"9\", \"9\", \"nes-btn col-3\"),\n\n    createFunction(\"4\", \"4\", \"nes-btn col-3\"),\n    createFunction(\"5\", \"5\", \"nes-btn col-3\"),\n    createFunction(\"6\", \"6\", \"nes-btn col-3\"),\n\n    createFunction(\"1\", \"1\", \"nes-btn col-3\"),\n    createFunction(\"2\", \"2\", \"nes-btn col-3\"),\n    createFunction(\"3\", \"3\", \"nes-btn col-3\"),\n\n    createFunction(\"0\", \"0\", \"nes-btn col-3\"),\n    createFunction(\".\", \".\", \"nes-btn col-3\"),\n    createFunction(\"=\", \"Result\", \"nes-btn is-success col-3\"),\n  ];\n\n  const buttonAC = () => {\n    if (initialValue === \"0\" || initialValue === \"\") {\n      setPanel(\"0\");\n      setSubPanel(\"Ans\");\n    } else {\n      setPanel(initialValue);\n      setSubPanel(\"Ans\");\n    }\n  };\n  const buttonDelete = () => {\n    if (panel.length > 1 && panel !== \"Error\") {\n      setPanel(panel.slice(0, -1));\n    } else if (panel.length <= 1 && initialValue === \"\") {\n      setPanel(\"0\");\n    } else if (panel.length <= 1 && initialValue !== \"\") {\n      setPanel(initialValue);\n    }\n  };\n  const buttonEdit = () => {\n    subPanel === \"Ans\" ? setPanel(panel) : setPanel(subPanel.slice(0, -1));\n  };\n  const arithmeticCheck = (e) => {\n    arithRegex.test(panel[panel.length - 1])\n      ? setPanel(panel.slice(0, -1) + e)\n      : setPanel(panel + e);\n    if (parenthRegex.test(panel[panel.length - 1])) {\n      setPanel(panel + e);\n    }\n  };\n  const parenthesis = (e) => {\n    panel === \"\" || panel === \"0\" ? setPanel(e) : setPanel(panel + e);\n  };\n  const buttonNumber = (e) => {\n    panel === \"\" || panel === \"0\" ? setPanel(e) : setPanel(panel + e);\n  };\n  const buttonResult = () => {\n    try {\n      setSubPanel(panel + \"=\");\n      setPanel(math.evaluate(panel));\n    } catch (err) {\n      setPanel(\"Error, press AC\");\n      if (panel === \"Error, press AC\") {\n        setSubPanel(subPanel);\n      }\n    }\n  };\n\n  return (\n    <div className=\"calculator-size\">\n      <div className=\"nes-container pc\">\n        <div className=\"nes-input is-dark display\">\n          <div className=\"mb-2 d-flex flex-row-reverse sub-panel\">\n            {subPanel}\n          </div>\n          <div className=\"d-flex flex-row-reverse panel\">{panel}</div>\n        </div>\n\n        <div className=\"container\">\n          {functions.map((data, key) => (\n            <button\n              key={key}\n              value={data.value}\n              className={data.style}\n              onClick={(e) => {\n                switch (data.value) {\n                  case \"AC\":\n                    buttonAC();\n                    break;\n                  case \"Delete\":\n                    buttonDelete();\n                    break;\n                  case \"Edit\":\n                    buttonEdit();\n                    break;\n                  case \"+\":\n                    arithmeticCheck(e.target.value);\n                    break;\n                  case \"-\":\n                    arithmeticCheck(e.target.value);\n                    break;\n                  case \"*\":\n                    arithmeticCheck(e.target.value);\n                    break;\n                  case \"/\":\n                    arithmeticCheck(e.target.value);\n                    break;\n                  case \"(\":\n                    parenthesis(e.target.value);\n                    break;\n                  case \")\":\n                    parenthesis(e.target.value);\n                    break;\n                  case \"1\":\n                    buttonNumber(e.target.value);\n                    break;\n                  case \"2\":\n                    buttonNumber(e.target.value);\n                    break;\n                  case \"3\":\n                    buttonNumber(e.target.value);\n                    break;\n                  case \"4\":\n                    buttonNumber(e.target.value);\n                    break;\n                  case \"5\":\n                    buttonNumber(e.target.value);\n                    break;\n                  case \"6\":\n                    buttonNumber(e.target.value);\n                    break;\n                  case \"7\":\n                    buttonNumber(e.target.value);\n                    break;\n                  case \"8\":\n                    buttonNumber(e.target.value);\n                    break;\n                  case \"9\":\n                    buttonNumber(e.target.value);\n                    break;\n                  case \"0\":\n                    buttonNumber(e.target.value);\n                    break;\n                  case \".\":\n                    buttonNumber(e.target.value);\n                    break;\n                  case \"Result\":\n                    buttonResult();\n                    break;\n                  default:\n                    setPanel(\"Error\");\n                }\n              }}\n            >\n              {data.name}\n            </button>\n          ))}\n        </div>\n      </div>\n      <div className=\"d-flex flex-row-reverse\">\n        <p>\n          Style by:{\" \"}\n          <a\n            href=\"https://nostalgic-css.github.io/NES.css/?fbclid=IwAR0q7FJyFhkv8P9wOkr35zPE8MiQsPnZjqOqoGUn3s9THD2j2v0v2ajSaf4\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            NES.css\n          </a>\n        </p>\n      </div>\n    </div>\n  );\n}\n\nexport default Calculator;\n","import React from \"react\";\nimport Calculator from \"./components/Calculator\";\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <div className=\"container text-center\">\n      <>\n        <h1 className=\"h2 mt-5 tittle\">Calculator</h1>\n        <p className=\"\">Created to qualify for \"Entry\" position at 23People</p>\n      </>\n      <>\n        <Calculator initialValue={\"\"} />\n      </>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}